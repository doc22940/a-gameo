(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{109:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var O=r.a.createContext({}),d=function(e){var t=r.a.useContext(O),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},o=function(e){var t=d(e.components);return r.a.createElement(O.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,b=e.parentName,O=i(e,["components","mdxType","originalType","parentName"]),o=d(a),p=n,u=o["".concat(b,".").concat(p)]||o[p]||j[p]||l;return a?r.a.createElement(u,c(c({ref:t},O),{},{components:a})):r.a.createElement(u,c({ref:t},O))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,b=new Array(l);b[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,b[1]=c;for(var O=2;O<l;O++)b[O]=a[O];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"},84:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(6),l=(a(0),a(109)),b={id:"setup",title:"Preparing Dataset for PyTorch",slug:"/preparing-dataset-for-pytorch"},c={unversionedId:"setup",id:"setup",isDocsHomePage:!1,title:"Preparing Dataset for PyTorch",description:"Cleaning Up Datasets",source:"@site/docs\\setup.md",slug:"/preparing-dataset-for-pytorch",permalink:"/docs/next/preparing-dataset-for-pytorch",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/setup.md",version:"current",sidebar:"docs",previous:{title:"Collaborative Filtering",permalink:"/docs/next/collaborative-filtering"},next:{title:"Implementing the Model",permalink:"/docs/next/implementing-the-model"}},i=[{value:"Cleaning Up Datasets",id:"cleaning-up-datasets",children:[{value:"1. Metacritic Game Info Dataset",id:"1-metacritic-game-info-dataset",children:[]},{value:"2. Metacritic Game User Ratings",id:"2-metacritic-game-user-ratings",children:[]}]},{value:"Export Dataset for Model",id:"export-dataset-for-model",children:[{value:"Encode Columns",id:"encode-columns",children:[]},{value:"Encode Dataframe",id:"encode-dataframe",children:[]},{value:"Export to csv",id:"export-to-csv",children:[]}]}],O={rightToc:i};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},O,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"cleaning-up-datasets"},"Cleaning Up Datasets"),Object(l.b)("p",null,"We are using 2 datasets to build the PyTorch model."),Object(l.b)("h3",{id:"1-metacritic-game-info-dataset"},"1. Metacritic Game Info Dataset"),Object(l.b)("p",null,"This dataset contains all video games published from 1998-2018. Here's a snippet of what it looks like:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Unnamed"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Title"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Year"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Publisher"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Genre"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Platform"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Metascore"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Avg_Userscore"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"No_Players"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The Legend of Zelda: Ocarina of Time"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1998"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Nintendo"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Action Adventure;Fantasy"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Nintendo64"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"99"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"9.1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1 Player")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Tony Hawk's Pro Skater 2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2000"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"NeversoftEntertainment"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sports;Alternative;Skateboarding"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PlayStation 98"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"7.4"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1-2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Grand Theft Auto IV"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2008"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"RockstarNorth"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Action Adventure;Modern;Modern;Open-World"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PlayStation3"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"98"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"7.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1 Player")))),Object(l.b)("p",null,"To keep our recommendation engine up-to-date, we are only interested in game titles after the year 2010. So let's clean up this dataset."),Object(l.b)("h4",{id:"import-pandas"},"Import pandas"),Object(l.b)("p",null,"First we import pandas, a Python package used for data manipulation and analysis."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import pandas as pd\n")),Object(l.b)("h4",{id:"read-and-filter-data"},"Read and Filter Data"),Object(l.b)("p",null,"Then, we use pandas to read our dataset file that we have imported."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'games_df = pd.read_csv("game_info.csv")\n')),Object(l.b)("p",null,"This dataset contains some Year values that are null. Select only those that are not null and after the year 2010."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"games_df = games_df[games_df['Year'].notnull()]\ngames_df=games_df.loc[games_df.Year>=2010.0].reset_index(drop=True)\n")),Object(l.b)("p",null,"Finally, let's remove the 'Unnamed' column since it is redundant and rename our cleaned up dataframe to ",Object(l.b)("inlineCode",{parentName:"p"},"df"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"df = games_df.drop(columns=['Unnamed'], axis=1)\n")),Object(l.b)("p",null,"Below is a snippet of what ",Object(l.b)("inlineCode",{parentName:"p"},"df")," looks like:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Index"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Title"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Year"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Publisher"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Genre"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Platform"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Metascore"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Avg_Userscore"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"No_Players"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Super Mario Galaxy 2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2010"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"NintendoEADTokyo"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Action;Platformer;Platformer;3D"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Wii"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"97"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"9.1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"No Online Multiplayer")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Grand Theft Auto V"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2014"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"RockstarNorth"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Action Adventure;Modern;Open-World"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"XboxOne"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"97"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"7.8"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Up to 30")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Grand Theft Auto V"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2013"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"RockstarNorth"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Modern;Action Adventure;Modern;Open-World"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PlayStation3"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"97"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"8.3"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Up to 16")))),Object(l.b)("h3",{id:"2-metacritic-game-user-ratings"},"2. Metacritic Game User Ratings"),Object(l.b)("p",null,"This dataset contains user ratings and comments for specific games. We are interested in only looking at the game titles in our ",Object(l.b)("inlineCode",{parentName:"p"},"df"),", ",Object(l.b)("inlineCode",{parentName:"p"},"username")," and the ",Object(l.b)("inlineCode",{parentName:"p"},"userscore")," columns. Before clean up, the dataset looks like this snippet:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Unnamed"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Title"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Platform"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Userscore"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Comment"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Username"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The Legend of Zelda: Ocarina of Time"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Nintendo64"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Everything in OoT is so near at perfection, it..."),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SirCaestus")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The Legend of Zelda: Ocarina of Time"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Nintendo64"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"I won't bore you with what everyone is already..."),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Kaistlin")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The Legend of Zelda: Ocarina of Time"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Nintendo64"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Anyone who gives the masterpiece below a 7 or ..."),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Jacody")))),Object(l.b)("h4",{id:"read-and-filter-data-1"},"Read and Filter Data"),Object(l.b)("p",null,"Same the previous dataset, we use pandas to read the data file."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'user_df=pd.read_csv("metacritic_game_user_comments.csv")\n')),Object(l.b)("p",null,"Then we remove the columns we don't need."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"user_df = user_df.drop(columns=['Unnamed', 'Platform','Comment'], axis=1)\n")),Object(l.b)("p",null,"And we select only the data with Title that exists in ",Object(l.b)("inlineCode",{parentName:"p"},"df")," Title column, because we only want user ratings for games after 2010. The final cleaned dataframe is called ",Object(l.b)("inlineCode",{parentName:"p"},"users"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"users = user_df.loc[user_df['Title'].isin(df['Title'])].reset_index(drop=True)\n")),Object(l.b)("p",null,"A snippet of the cleaned up dataset looks like:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Index"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Title"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Userscore"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Username"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Super Mario Galaxy 2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"S.Kumar")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Super Mario Galaxy 2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"8"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ThePlasmaQuasar")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Super Mario Galaxy 2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"juanandesign")))),Object(l.b)("h2",{id:"export-dataset-for-model"},"Export Dataset for Model"),Object(l.b)("p",null,"In order to work with the dataset easily, it is better to use continuous ids to identify game titles and users."),Object(l.b)("h3",{id:"encode-columns"},"Encode Columns"),Object(l.b)("p",null,"We can create a function to encode a pandas columns with ids."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'def encode_column(column):\n    """ Encodes a pandas column with continous IDs"""\n    keys = column.unique()\n    key_to_id = {key:idx for idx,key in enumerate(keys)}\n    return key_to_id, np.array([key_to_id[x] for x in column]), len(keys)\n')),Object(l.b)("h3",{id:"encode-dataframe"},"Encode Dataframe"),Object(l.b)("p",null,"Then, encode the ",Object(l.b)("inlineCode",{parentName:"p"},"users")," dataframe for the ",Object(l.b)("inlineCode",{parentName:"p"},"Title")," and ",Object(l.b)("inlineCode",{parentName:"p"},"Username")," columns with the following function."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"def encode_df(users):\n   \"\"\"Encodes rating data with continuous user and game title ids\"\"\"\n   game_ids, users['TitleId'], num_games = encode_column(users['Title'])\n   user_ids,users['UserId'], num_users = encode_column(users['Username'])\n   return users, num_users, num_games, user_ids, game_ids\n")),Object(l.b)("h3",{id:"export-to-csv"},"Export to csv"),Object(l.b)("p",null,"Execute the function and export the new dataset to csv."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"users, num_users, num_games, user_ids, game_ids = encode_df(users)\nusers.to_csv('game_ratings.csv')\n")),Object(l.b)("p",null,"This csv file will be used for training and re-training the model with PyTorch. Below is a snippet of it:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Index"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Title"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Userscore"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Username"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"UserId"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"TitleId"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Super Mario Galaxy 2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"S.Kumar"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Super Mario Galaxy 2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"8"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ThePlasmaQuasar"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Super Mario Galaxy 2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"juanandesign"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0")))))}d.isMDXComponent=!0}}]);