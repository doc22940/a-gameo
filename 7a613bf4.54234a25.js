(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{109:function(e,a,n){"use strict";n.d(a,"a",(function(){return u})),n.d(a,"b",(function(){return b}));var t=n(0),r=n.n(t);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function d(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function m(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var a=r.a.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):d(d({},a),e)),n},u=function(e){var a=s(e.components);return r.a.createElement(c.Provider,{value:a},e.children)},l={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},p=r.a.forwardRef((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),u=s(n),p=t,b=u["".concat(o,".").concat(p)]||u[p]||l[p]||i;return n?r.a.createElement(b,d(d({ref:a},c),{},{components:n})):r.a.createElement(b,d({ref:a},c))}));function b(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,o=new Array(i);o[0]=p;var d={};for(var m in a)hasOwnProperty.call(a,m)&&(d[m]=a[m]);d.originalType=e,d.mdxType="string"==typeof e?e:t,o[1]=d;for(var c=2;c<i;c++)o[c]=n[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},82:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return o})),n.d(a,"metadata",(function(){return d})),n.d(a,"rightToc",(function(){return m})),n.d(a,"default",(function(){return s}));var t=n(2),r=n(6),i=(n(0),n(109)),o={id:"add-game",title:"Tambahkan Game",slug:"/tambahkan-game"},d={unversionedId:"add-game",id:"version-id/add-game",isDocsHomePage:!1,title:"Tambahkan Game",description:"Tutorial ini mengasumsikan Anda sudah memiliki file server.py dengan Python Flask dan pengaturan PyMongo. Jika Anda belum melakukannya, baca Gambaran sebelum membaca bagian ini.",source:"@site/versioned_docs\\version-id\\add-game.md",slug:"/tambahkan-game",permalink:"/Gameo/docs/id/tambahkan-game",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/versioned_docs/version-id/add-game.md",version:"id",sidebar:"version-id/docs",previous:{title:"Dapatkan Rekomendasi",permalink:"/Gameo/docs/id/dapatkan-rekomendasi"},next:{title:"Hapus Game",permalink:"/Gameo/docs/id/hapus-game"}},m=[],c={rightToc:m};function s(e){var a=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},c,n,{components:a,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(t.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(t.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(t.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Tutorial ini mengasumsikan Anda sudah memiliki file server.py dengan Python Flask dan pengaturan PyMongo. Jika Anda belum melakukannya, baca ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"./gambaran"}),"Gambaran")," sebelum membaca bagian ini."))),Object(i.b)("p",null,"Saat pengguna menambahkan game ke pustaka atau daftar keinginan mereka, kami memperbarui data mereka dengan langkah-langkah berikut:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Permintaan melewati email dan array pengguna (yaitu game atau daftar keinginan) yang akan diperbarui sebagai kueri."),Object(i.b)("li",{parentName:"ol"},'Jika kueri daftar bukan "game" atau "wishlist", kembalikan 400 kesalahan.'),Object(i.b)("li",{parentName:"ol"},"Lain, dapatkan properti game yang diperlukan untuk mendorong ke array dari isi permintaan. Inisialisasi peringkatnya sebagai Tidak Ada."),Object(i.b)("li",{parentName:"ol"},"Gunakan ",Object(i.b)("inlineCode",{parentName:"li"},"find_one_and_update")," MongoDB untuk menemukan pengguna melalui email dan mendorong permainan ke daftar yang ditentukan.")),Object(i.b)("p",null,"Kodenya adalah sebagai berikut:"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-python"}),"@app.route('/game', methods=[\"PATCH\"])\ndef add_game():\n    email = request.args.get('email') #user email\n    add_to_list = request.args.get('list')\n    if add_to_list != 'games' and add_to_list != 'wishlist':\n        print(\"no such list\")\n        abort(400)\n    req_body = request.get_json()\n    post_data = {\n        'game_id': req_body['game_id'],\n        'title': req_body['title'],\n        'rating': None\n    }\n\n    user = User.find_one_and_update({'email': email}, {'$push': {add_to_list: post_data}})\n    if not user:\n        print(\"no user\")\n        abort(404)\n    return jsonify({'user': user})\n\n")))}s.isMDXComponent=!0}}]);